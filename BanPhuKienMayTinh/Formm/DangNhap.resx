<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="$this.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BAEAQBAEB//Z
</value>
  </data>
</root>